diff a/羊の楽園20231221/Source/GameObject/player.cpp b/羊の楽園20231221/Source/GameObject/player.cpp	(rejected hunks)
@@ -292,31 +292,13 @@
 {
 	Scene* scene = Manager::GetScene();
 
-	//���b�N
-	auto rocks = scene->GetGameObjects<Rock>();
-	for (Rock* rock : rocks) {
-		if (rock->GetState() != BREAKOBJECT_STATE::DEATH)
+	//�j��I�u�W�F�N�g
+	auto breakObjects = scene->GetGameObjects<BreakObject>();
+	for (BreakObject* breakObject : breakObjects) {
+		if (breakObject->GetState() != BREAKOBJECT_STATE::DEATH)
 		{
-			D3DXVECTOR3 position = rock->GetPosition();
-			D3DXVECTOR3 scale = rock->GetScale();
-			if (position.x - scale.x < m_Position.x && m_Position.x < position.x + scale.x &&
-				position.z - scale.z < m_Position.z && m_Position.z < position.z + scale.z) {
-				if (m_Position.y < position.y + scale.y) {//2.0f�̓��f���Œ���
-					m_Velocity.x = (m_Position.x - position.x) * 0.02f;
-					m_Velocity.z = (m_Position.z - position.z) * 0.02f;
-				}
-				else { groundHeight = position.y + scale.y; }	//�������2.0
-			}
-		}
-	}
-
-	//�`�F�X�g
-	auto chests = scene->GetGameObjects<Chest>();
-	for (Chest* chest : chests) {
-		if (chest->GetState() != BREAKOBJECT_STATE::DEATH)
-		{
-			D3DXVECTOR3 position = chest->GetPosition();
-			D3DXVECTOR3 scale = chest->GetScale();
+			D3DXVECTOR3 position = breakObject->GetPosition();
+			D3DXVECTOR3 scale = breakObject->GetScale();
 			if (position.x - scale.x < m_Position.x && m_Position.x < position.x + scale.x &&
 				position.z - scale.z < m_Position.z && m_Position.z < position.z + scale.z) {
 				if (m_Position.y < position.y + scale.y) {//2.0f�̓��f���Œ���
